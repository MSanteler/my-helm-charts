apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "procare.fullname" . }}-karafka
  labels:
    {{- include "procare.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "procare.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "procare.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "procare.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: db-migrate
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["sh", "-c", "bundle exec rails db:migrate"]
          env:
            - name: DATABASE_HOST
              value: procare-postgres-postgresql
            - name: DATABASE_USERNAME
              value: myuser
            - name: DATABASE_NAME
              value: mydb
            - name: DB_SSLMODE
              value: disable
            - name: DATABASE_PASSWORD
              value: mypassword
      containers:
        - name: {{ .Chart.Name }}-karafka
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["bundle", "exec", "karafka", "server"]
          env:
            - name: DATABASE_HOST
              value: procare-postgres-postgresql
            - name: DATABASE_USERNAME
              value: myuser
            - name: DATABASE_NAME
              value: mydb
            - name: DB_SSLMODE
              value: disable
            - name: DATABASE_PASSWORD
              value: mypassword
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 3000
          readinessProbe:
            httpGet:
              path: /
              port: 3000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
